{"version":3,"file":"component---src-gatsby-theme-portfolio-minimal-templates-article-index-tsx-09bd8cd385351bdc612a.js","mappings":"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","sources":["webpack://snubayes/./src/gatsby-theme-portfolio-minimal/sections/People/data.tsx","webpack://snubayes/./src/gatsby-theme-portfolio-minimal/components/AuthorSnippet/style.module.css","webpack://snubayes/./src/gatsby-theme-portfolio-minimal/components/AuthorSnippet/index.tsx","webpack://snubayes/./src/gatsby-theme-portfolio-minimal/templates/Article/style.module.css","webpack://snubayes/./src/gatsby-theme-portfolio-minimal/templates/Article/index.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby';\nimport { People } from '../../components/People';\n\ninterface PeopleSectionQueryResult {\n    allPeopleJson: {\n        sections: {\n            button: {\n                label: string;\n                url: string;\n                visible: boolean;\n            };\n            people: People[];\n        }[];\n    };\n}\n\nexport const useLocalDataSource = (): PeopleSectionQueryResult => {\n    return useStaticQuery(graphql`\n        query PeopleSectionQuery {\n            allPeopleJson {\n                sections: nodes {\n                    button {\n                        label\n                        url\n                        visible\n                    }\n                    people {\n                        affiliation\n                        alumni\n                        description\n                        image {\n                            alt\n                            linkTo\n                            src {\n                                childImageSharp {\n                                    gatsbyImageData(width: 400)\n                                }\n                            }\n                        }\n                        links {\n                            type\n                            url\n                        }\n                        subjects\n                        name\n                        visible\n                        degree\n                        contacts {\n                            type\n                            content\n                        }\n                    }\n                }\n            }\n        }\n    `);\n};\n","// extracted by mini-css-extract-plugin\nexport var AuthorSnippet = \"style-module--AuthorSnippet--e799d\";\nexport var Avatar = \"style-module--Avatar--f863b\";\nexport var Bio = \"style-module--Bio--51516\";\nexport var Description = \"style-module--Description--c1a57\";\nexport var WrittenBy = \"style-module--WrittenBy--8cbeb\";","import React from 'react';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { useSiteMetadata } from 'gatsby-theme-portfolio-minimal/src/hooks/useSiteMetadata';\nimport * as classes from './style.module.css';\nimport { Link } from 'gatsby';\n\ninterface AuthorProps {\n    author?: string | null | undefined;\n    avatar?: {\n        childImageSharp: {\n            gatsbyImageData: any;\n        };\n    } | null | undefined;\n    bio?: string | null | undefined;\n    authorlink?: string | null | undefined;\n  }\n\nexport function AuthorSnippet(props: AuthorProps): React.ReactElement {\n    const siteMetadata = useSiteMetadata();\n    const author = props.author ? props.author : siteMetadata.author;\n    const avatar = props.avatar ? props.avatar : siteMetadata.avatar;\n    const bio = props.bio ? props.bio : siteMetadata.bio;\n    const authorlink = props.authorlink ? siteMetadata.siteUrl + props.authorlink : undefined;\n    return (\n        <div className={classes.AuthorSnippet}>\n            {avatar?.childImageSharp?.gatsbyImageData ? (\n                <GatsbyImage image={avatar.childImageSharp.gatsbyImageData} alt={author} className={classes.Avatar} />\n            ) : null}\n            <div className={classes.Description}>\n                <span className={classes.WrittenBy}>\n                    작성자: <u>{authorlink ? (\n                        <Link to={authorlink}\n                        // title={`Back To All ${pluralize(props.pageContext.entityName) ?? 'Articles'}`}\n                        title={author}>{author}</Link>) :\n                        author}</u>\n                </span>\n                <p className={classes.Bio}>{bio}</p>\n            </div>\n        </div>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport var Article = \"style-module--Article--9d1d0\";\nexport var BackArrow = \"style-module--BackArrow--e7ff8\";\nexport var Banner = \"style-module--Banner--644f4\";\nexport var BannerCaption = \"style-module--BannerCaption--fdfe7\";\nexport var BannerImage = \"style-module--BannerImage--b84ae\";\nexport var Body = \"style-module--Body--c700a\";\nexport var Breadcrumb = \"style-module--Breadcrumb--41dce\";\nexport var Category = \"style-module--Category--ea2ea\";\nexport var Content = \"style-module--Content--34877\";\nexport var Details = \"style-module--Details--ac351\";\nexport var Footer = \"style-module--Footer--c7fbf\";\nexport var Header = \"style-module--Header--6f61a\";\nexport var Keyword = \"style-module--Keyword--a6c6f\";\nexport var ReadingTime = \"style-module--ReadingTime--eaae0\";","import React from 'react';\nimport { Link } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { Page } from 'gatsby-theme-portfolio-minimal/src/components/Page';\nimport { Seo } from '../../components/Seo';\nimport { AuthorSnippet } from '../../components/AuthorSnippet';\nimport { ArticleTemplateData } from './data';\nimport * as classes from './style.module.css';\nimport { useLocalDataSource } from '../../sections/People/data';\n// import { pluralize } from 'gatsby-theme-portfolio-minimal/src/utils/pluralize';\n\n// Reference to the local prismjs theme (Modified)\nrequire('gatsby-theme-portfolio-minimal/src/globalStyles/prism.css');\n\ninterface ArticleTemplateProps {\n    pageContext: {\n        article: ArticleTemplateData;\n        listingPagePath: string;\n        entityName?: string;\n    };\n}\n\nexport default function ArticleTemplate(props: ArticleTemplateProps): React.ReactElement {\n    const response = useLocalDataSource();\n    const peopleData = response.allPeopleJson.sections[0].people;\n    const article = props.pageContext.article;\n    const bannerUrl = article.banner ? article.banner.src : undefined;\n    const peopleList = peopleData.map((people) => people.name);\n    const authorIndex = article.categories ? peopleList.findIndex(\n        (people) => article.categories.includes(people)\n    ) : -1;\n    const authorData = authorIndex !== -1 ? peopleData[authorIndex] : undefined;\n    const affiliation = authorData ? authorData.affiliation : undefined;\n    const author = authorData ? authorData.name : undefined;\n    const avatar = authorData ? authorData.image.src : undefined;\n    const bio = authorData ? authorData.description : undefined;\n    const authorlink = authorData ? \"/people/#\" + affiliation + author : undefined;\n    return (\n        <>\n            <Seo title={article.title} description={article.description || undefined} useTitleTemplate={true} thumbnailBanner={bannerUrl} />\n            <Page>\n                <article className={classes.Article}>\n                    <div className={classes.Breadcrumb}>\n                        <Link\n                            to={props.pageContext.listingPagePath}\n                            // title={`Back To All ${pluralize(props.pageContext.entityName) ?? 'Articles'}`}\n                            title={`전체 ${props.pageContext.entityName}로 돌아가기`}\n                        >\n                            <span className={classes.BackArrow}>&#10094;</span>\n                            {/* All {pluralize(props.pageContext.entityName) ?? 'Articles'} */}\n                            전체 {props.pageContext.entityName}\n                        </Link>\n                    </div>\n                    <section className={classes.Header}>\n                        <span className={classes.Category}>{article.categories.join(' / ')}</span>\n                        <h1>{article.title}</h1>\n                        <div className={classes.Details}>\n                            {article.date}\n                            <span className={classes.ReadingTime}>{article.readingTime.text}</span>\n                        </div>\n                    </section>\n                    {article.banner && article.banner.src && (\n                        <section className={classes.Banner}>\n                            <GatsbyImage\n                                image={article.banner.src.childImageSharp.gatsbyImageData}\n                                alt={article.banner.alt || `Image for ${article.title}`}\n                                imgClassName={classes.BannerImage}\n                            />\n                            {article.banner.caption && (\n                                <span\n                                    className={classes.BannerCaption}\n                                    dangerouslySetInnerHTML={{ __html: article.banner.caption }}\n                                />\n                            )}\n                        </section>\n                    )}\n                    <section className={classes.Body}>\n                        <div className={classes.Content} dangerouslySetInnerHTML={{ __html: article.body }} />\n                        {article.keywords &&\n                            article.keywords.map((keyword, key) => {\n                                return (\n                                    <span key={key} className={classes.Keyword}>\n                                        {keyword}\n                                    </span>\n                                );\n                            })}\n                    </section>\n                    <section className={classes.Footer}>\n                        <AuthorSnippet author={ author } authorlink={ authorlink } bio={ bio } avatar={ avatar } />\n                    </section>\n                </article>\n            </Page>\n        </>\n    );\n}\n"],"names":["useLocalDataSource","useStaticQuery","AuthorSnippet","Avatar","Bio","Description","WrittenBy","props","_avatar$childImageSha","siteMetadata","useSiteMetadata","author","avatar","bio","authorlink","siteUrl","undefined","React","className","classes","childImageSharp","gatsbyImageData","GatsbyImage","image","alt","Link","to","title","Article","BackArrow","Banner","BannerCaption","BannerImage","Body","Breadcrumb","Category","Content","Details","Footer","Header","Keyword","ReadingTime","ArticleTemplate","peopleData","allPeopleJson","sections","people","article","pageContext","bannerUrl","banner","src","peopleList","map","name","authorIndex","categories","findIndex","includes","authorData","affiliation","description","Seo","useTitleTemplate","thumbnailBanner","Page","listingPagePath","entityName","join","date","readingTime","text","imgClassName","caption","dangerouslySetInnerHTML","__html","body","keywords","keyword","key","require"],"sourceRoot":""}