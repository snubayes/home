{"version":3,"file":"component---src-pages-people-js-095aae2ac513ca92e0e8.js","mappings":"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","sources":["webpack://snubayes/./src/gatsby-theme-portfolio-minimal/sections/People/data.tsx","webpack://snubayes/./src/gatsby-theme-portfolio-minimal/components/People/style.module.css","webpack://snubayes/./src/gatsby-theme-portfolio-minimal/components/People/index.tsx","webpack://snubayes/./src/gatsby-theme-portfolio-minimal/sections/People/style.module.css","webpack://snubayes/./src/gatsby-theme-portfolio-minimal/sections/People/index.tsx","webpack://snubayes/./src/pages/people.js"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby';\nimport { People } from '../../components/People';\n\ninterface PeopleSectionQueryResult {\n    allPeopleJson: {\n        sections: {\n            button: {\n                label: string;\n                url: string;\n                visible: boolean;\n            };\n            people: People[];\n        }[];\n    };\n}\n\nexport const useLocalDataSource = (): PeopleSectionQueryResult => {\n    return useStaticQuery(graphql`\n        query PeopleSectionQuery {\n            allPeopleJson {\n                sections: nodes {\n                    button {\n                        label\n                        url\n                        visible\n                    }\n                    people {\n                        affiliation\n                        alumni\n                        description\n                        image {\n                            alt\n                            linkTo\n                            src {\n                                childImageSharp {\n                                    gatsbyImageData(width: 400)\n                                }\n                            }\n                        }\n                        links {\n                            type\n                            url\n                        }\n                        subjects\n                        name\n                        visible\n                        degree\n                        contacts {\n                            type\n                            content\n                        }\n                    }\n                }\n            }\n        }\n    `);\n};\n","// extracted by mini-css-extract-plugin\nexport var Affiliation = \"style-module--Affiliation--f6f57\";\nexport var Anchor = \"style-module--Anchor--bfdf9\";\nexport var ContactItem = \"style-module--ContactItem--70f2f\";\nexport var Contacts = \"style-module--Contacts--3f992\";\nexport var Degree = \"style-module--Degree--01457\";\nexport var Details = \"style-module--Details--943d6\";\nexport var Links = \"style-module--Links--5a957\";\nexport var Name = \"style-module--Name--c21e7\";\nexport var People = \"style-module--People--7e7c0\";\nexport var PeopleImage = \"style-module--PeopleImage--8635b\";\nexport var PeopleImageWrapper = \"style-module--PeopleImageWrapper--eda1c\";\nexport var Subjects = \"style-module--Subjects--4540f\";","import React from 'react';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { Animation } from 'gatsby-theme-portfolio-minimal/src/components/Animation';\nimport { useMediaQuery } from 'gatsby-theme-portfolio-minimal/src/hooks/useMediaQuery';\nimport { Icon } from 'gatsby-theme-portfolio-minimal/src/components/Icon';\nimport { ImageObject } from 'gatsby-theme-portfolio-minimal/src/types';\nimport * as classes from './style.module.css';\nimport { Section } from 'gatsby-theme-portfolio-minimal/src/components/Section';\n\nenum LinkType {\n    External = 'external',\n    Github = 'github',\n}\n\nenum ContactType {\n    TEL = 'tel',\n    Email = 'email',\n    Office = 'office'\n}\n\nexport interface People {\n    affiliation?: string;\n    name: string;\n    description: string;\n    image: ImageObject & { linkTo?: string };\n    subjects?: string[];\n    links?: {\n        type: LinkType;\n        url: string;\n    }[];\n    visible: boolean;\n    contacts?: {\n        type: ContactType;\n        content: string[];\n    }[];\n    alumni?: boolean;\n    degree?: string;\n}\n\ninterface PeopleProps {\n    data: People;\n    index: number;\n}\n\nexport function People(props: PeopleProps): React.ReactElement {\n    const isDesktopBreakpoint = useMediaQuery('(min-width: 992px)');\n\n    return (\n        <Animation\n            type=\"fadeUp\"\n            className={classes.People}\n            style={{\n                flexDirection: isDesktopBreakpoint && true ? 'row-reverse' : undefined,\n            }}\n        >\n            <div className={classes.Details}>\n                <span className={classes.Degree}>{props.data.degree}</span>\n                <span className={classes.Affiliation}>{props.data.affiliation}</span>\n                <h4 className={classes.Name}>{props.data.name}</h4>\n                <p>{props.data.description}</p>\n                <div className={classes.Subjects}>\n                    {props.data.subjects &&\n                        props.data.subjects.length !== 0 &&\n                        props.data.subjects.map((subject, key) => {\n                            return (\n                                <span key={key}>\n                                    <u>{subject}</u>\n                                </span>\n                            );\n                        })}\n                </div>\n                <div className={classes.Contacts}>\n                    {props.data.contacts &&\n                        props.data.contacts.length !== 0 &&\n                        props.data.contacts.map((contact, contactIdx) => {\n                            if (contact.type === ContactType.TEL || contact.type === ContactType.Office) {\n                                const contactType = contact.type === ContactType.TEL ? 'TEL' : 'Office';\n                               return(\n                                    <div className={classes.ContactItem}>                     \n                                    {`${contactType}: `}{contact.content.map((item, itemIdx) => {\n                                        if (itemIdx === 0) {\n                                            return `${item}`;\n                                        } else {\n                                            if (itemIdx < contact.content.length - 1) {\n                                                return `, ${item}`;\n                                            } else if (itemIdx === contact.content.length - 1) {\n                                                return ` and ${item}`;\n                                            }\n                                        }\n                                    }\n                                    )}\n                                    </div>\n                                 );\n                            }\n                            if (contact.type === ContactType.Email) {\n                                return(\n                                    <div className={classes.ContactItem}>                     \n                                    {`Email: `}{contact.content.map((mail, mailIdx) => {\n                                        if (mailIdx === 0) {\n                                            return <a href={`mailto:${mail}`}>{mail}</a>;\n                                        } else {\n                                            if (mailIdx < contact.content.length - 1) {\n                                                return <>, <a href={`mailto:${mail}`}>{mail}</a></>;\n                                            } else if (mailIdx === contact.content.length - 1) {\n                                                return <> and <a href={`mailto:${mail}`}>{mail}</a></>;\n                                            }\n                                        }\n                                    }\n                                    )}\n                                    </div>\n                                 );\n                            }\n                        })}\n                </div>\n                <div className={classes.Links}>\n                    {props.data.links &&\n                        props.data.links.length !== 0 &&\n                        props.data.links.map((link, key) => {\n                            return (\n                                <a\n                                    key={key}\n                                    href={link.url}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    aria-label=\"External Link\"\n                                >\n                                    <Icon name={link.type} color=\"var(--subtext-color)\" />\n                                </a>\n                            );\n                        })}\n                </div>\n            </div>\n            {props.data.image.src && props.data.image.linkTo && (\n                <a href={props.data.image.linkTo} target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"External Link\">\n                    <GatsbyImage\n                        className={classes.PeopleImageWrapper}\n                        imgClassName={classes.PeopleImage}\n                        image={props.data.image.src.childImageSharp.gatsbyImageData}\n                        alt={props.data.image.alt || `People ${props.data.name}`}\n                    />\n                </a>\n            )}\n            {props.data.image.src && !props.data.image.linkTo && (\n                <GatsbyImage\n                    className={classes.PeopleImageWrapper}\n                    imgClassName={classes.PeopleImage}\n                    image={props.data.image.src.childImageSharp.gatsbyImageData}\n                    alt={props.data.image.alt || `People ${props.data.name}`}\n                />\n            )}\n            <div id={(props.data.affiliation + props.data.name)} className={classes.Anchor}></div>\n        </Animation>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport var MorePeople = \"style-module--MorePeople--0f8c7\";\nexport var People = \"style-module--People--958d8\";","import React from 'react';\nimport { Animation } from 'gatsby-theme-portfolio-minimal/src/components/Animation';\nimport { Section } from 'gatsby-theme-portfolio-minimal/src/components/Section';\nimport { Slider } from 'gatsby-theme-portfolio-minimal/src/components/Slider';\nimport { Button, ButtonType } from 'gatsby-theme-portfolio-minimal/src/components/Button';\nimport { People } from '../../components/People';\nimport { PageSection } from 'gatsby-theme-portfolio-minimal/src/types';\nimport { useLocalDataSource } from './data';\nimport * as classes from './style.module.css';\n\nexport function PeopleSection(props: PageSection): React.ReactElement {\n    const response = useLocalDataSource();\n    const data = response.allPeopleJson.sections[0];\n\n    const shouldShowButton = data.button !== undefined && data.button.visible !== false;\n    const [shownAlumni, setShownAlumni] = React.useState<boolean>(\n        shouldShowButton ? false : true\n    );\n\n    function loadAlumniHandler() {\n        setShownAlumni(true);\n    }\n\n    return (\n        <Animation type=\"fadeIn\">\n            <Section anchor={props.sectionId} heading={props.heading}>\n                <Slider additionalClasses={[classes.People]}>\n                    {data.people.map((people, key) => {\n                        return people.visible && !people.alumni ? <People key={key} index={key} data={people} /> : null;\n                    })}\n                </Slider>\n                {shouldShowButton && (\n                        <Animation type=\"fadeIn\" className={classes.MorePeople} >\n                            <Button\n                                type={ButtonType.BUTTON}\n                                onClickHandler={loadAlumniHandler}\n                                label={data.button.label || \"Load More\"}\n                                id=\"alumni-button\"\n                            />\n                        </Animation>\n                )}\n                <Slider additionalClasses={[classes.People]}>\n                    {data.people.map((people, key) => {\n                        return people.visible && people.alumni && shownAlumni ? <People key={key} index={key} data={people} /> : null;\n                    })}\n                </Slider>\n            </Section>\n        </Animation>\n    );\n}\n","import React from \"react\";\nimport { Page, Seo } from \"gatsby-theme-portfolio-minimal\";\nimport { PeopleSection } from \"../gatsby-theme-portfolio-minimal/sections/People\";\n\nexport default function PeoplePage() {\n  return (\n    <>\n      <Seo title=\"구성원\" description=\"서울대학교 베이즈통계 연구실의 구성원들을 소개합니다.\" useTitleTemplate={true} noIndex={true} />\n      <Page>\n        <PeopleSection sectionId=\"people\" heading=\"구성원\" />\n      </Page>\n    </>\n  );\n}\n"],"names":["useLocalDataSource","useStaticQuery","Affiliation","Anchor","ContactItem","Contacts","Degree","Details","Links","Name","People","PeopleImage","PeopleImageWrapper","Subjects","ContactType","props","isDesktopBreakpoint","useMediaQuery","React","Animation","type","className","classes","style","flexDirection","undefined","data","degree","affiliation","name","description","subjects","length","map","subject","key","contacts","contact","contactIdx","TEL","Office","contactType","content","item","itemIdx","Email","mail","mailIdx","href","links","link","url","target","rel","Icon","color","image","src","linkTo","GatsbyImage","imgClassName","childImageSharp","gatsbyImageData","alt","id","MorePeople","PeopleSection","allPeopleJson","sections","shouldShowButton","button","visible","shownAlumni","setShownAlumni","Section","anchor","sectionId","heading","Slider","additionalClasses","people","alumni","index","Button","ButtonType","BUTTON","onClickHandler","label","PeoplePage","Seo","title","useTitleTemplate","noIndex","Page"],"sourceRoot":""}